name: CI
 
on:
  push:
    branches: 
    - staging
    - main
    - feature_CI_CD
  pull_request:
    branches: [ "staging" ]

permissions:
  contents: read

jobs:
  unit_tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run unit tests
      run: | 
        pytest source/App/test_load_data.py
        pytest source/App/test_train_model.py

  deploy_docker_hub:
    needs: unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
            context: .
            push: true
            tags: evach28/mlopsproject:latest

  tag_on_success:
    needs: unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GT_TOKEN }}
      - name: Tag the successful build
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git tag ci-success-${GITHUB_SHA::8} ${GITHUB_SHA}
          git push origin ci-success-${GITHUB_SHA::8}
